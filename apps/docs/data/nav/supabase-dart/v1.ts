const Nav = [
  {
    label: '开始',
    items: [
      { name: 'Flutter客户端', url: '/reference/dart', items: [] },
      { name: '安装', url: '/reference/dart/installing', items: [] },
      { name: '初始化', url: '/reference/dart/initializing', items: [] },
      { name: '更新到flutter v1', url: '/reference/dart/upgrade-guide', items: [] },
    ],
  },
  {
    label: '数据库',
    items: [
      { name: 'Select 查询', url: '/reference/dart/select', items: [] },
      { name: 'Insert 数据', url: '/reference/dart/insert', items: [] },
      { name: 'Update 数据', url: '/reference/dart/update', items: [] },
      { name: 'Upsert 数据', url: '/reference/dart/upsert', items: [] },
      { name: 'Delete 数据', url: '/reference/dart/delete', items: [] },
      { name: '调用Postgres函数', url: '/reference/dart/rpc', items: [] },
      {
        name: '过滤器',
        url: undefined,
        items: [
          { name: '使用过滤器', url: '/reference/dart/using-filters', items: [] },
          { name: 'eq()', url: '/reference/dart/eq', items: [] },
          { name: 'neq()', url: '/reference/dart/neq', items: [] },
          { name: 'gt()', url: '/reference/dart/gt', items: [] },
          { name: 'gte()', url: '/reference/dart/gte', items: [] },
          { name: 'lt()', url: '/reference/dart/lt', items: [] },
          { name: 'lte()', url: '/reference/dart/lte', items: [] },
          { name: 'like()', url: '/reference/dart/like', items: [] },
          { name: 'ilike()', url: '/reference/dart/ilike', items: [] },
          { name: 'is_()', url: '/reference/dart/is_', items: [] },
          { name: 'in_()', url: '/reference/dart/in_', items: [] },
          { name: 'contains()', url: '/reference/dart/contains', items: [] },
          { name: 'containedBy()', url: '/reference/dart/containedby', items: [] },
          { name: 'rangeGt()', url: '/reference/dart/rangegt', items: [] },
          { name: 'rangeGte()', url: '/reference/dart/rangegte', items: [] },
          { name: 'rangeLt()', url: '/reference/dart/rangelt', items: [] },
          { name: 'rangeLte()', url: '/reference/dart/rangelte', items: [] },
          { name: 'rangeAdjacent()', url: '/reference/dart/rangeadjacent', items: [] },
          { name: 'overlaps()', url: '/reference/dart/overlaps', items: [] },
          { name: 'textSearch()', url: '/reference/dart/textsearch', items: [] },
          { name: 'match()', url: '/reference/dart/match', items: [] },
          { name: 'not()', url: '/reference/dart/not', items: [] },
          { name: 'or()', url: '/reference/dart/or', items: [] },
          { name: 'filter()', url: '/reference/dart/filter', items: [] },
        ],
      },
      {
        name: '修改器',
        url: undefined,
        items: [
          { name: '使用修改器', url: '/reference/dart/using-modifiers', items: [] },
          { name: 'order()', url: '/reference/dart/order', items: [] },
          { name: 'limit()', url: '/reference/dart/limit', items: [] },
          { name: 'range()', url: '/reference/dart/range', items: [] },
          { name: 'single()', url: '/reference/dart/single', items: [] },
        ],
      },
    ],
  },
  {
    label: '认证',
    items: [
      { name: 'signUp()', url: '/reference/dart/auth-signup', items: [] },
      {
        name: 'signInWithPassword()',
        url: '/reference/dart/auth-signinwithpassword',
        items: [],
      },
      { name: 'signInWithOtp()', url: '/reference/dart/auth-signinwithotp', items: [] },
      { name: 'signInWithOAuth()', url: '/reference/dart/auth-signinwithoauth', items: [] },
      { name: 'signOut()', url: '/reference/dart/auth-signout', items: [] },
      { name: 'verifyOtp()', url: '/reference/dart/auth-verifyotp', items: [] },
      { name: 'currentSession', url: '/reference/dart/auth-currentsession', items: [] },
      { name: 'currentUser', url: '/reference/dart/auth-currentuser', items: [] },
      { name: 'updateUser()', url: '/reference/dart/auth-updateuser', items: [] },
      { name: 'onAuthStateChange()', url: '/reference/dart/auth-onauthstatechange', items: [] },
      {
        name: 'resetPasswordForEmail()',
        url: '/reference/dart/auth-resetpasswordforemail',
        items: [],
      },
    ],
  },
  {
    label: '函数',
    items: [{ name: 'invoke()', url: '/reference/dart/invoke', items: [] }],
  },
  {
    label: 'Realtime',
    items: [
      { name: 'stream()', url: '/reference/dart/stream', items: [] },
      { name: 'on().subscribe()', url: '/reference/dart/subscribe', items: [] },
      { name: 'removeChannel()', url: '/reference/dart/removechannel', items: [] },
      { name: 'removeAllChannels()', url: '/reference/dart/removeallchannels', items: [] },
      { name: 'getChannels()', url: '/reference/dart/getchannels', items: [] },
    ],
  },
  {
    label: '存储',
    items: [
      { name: 'createBucket()', url: '/reference/dart/storage-createbucket', items: [] },
      { name: 'getBucket()', url: '/reference/dart/storage-getbucket', items: [] },
      { name: 'listBuckets()', url: '/reference/dart/storage-listbuckets', items: [] },
      { name: 'updateBucket()', url: '/reference/dart/storage-updatebucket', items: [] },
      { name: 'deleteBucket()', url: '/reference/dart/storage-deletebucket', items: [] },
      { name: 'emptyBucket()', url: '/reference/dart/storage-emptybucket', items: [] },
      { name: 'from.upload()', url: '/reference/dart/storage-from-upload', items: [] },
      { name: 'from.download()', url: '/reference/dart/storage-from-download', items: [] },
      { name: 'from.list()', url: '/reference/dart/storage-from-list', items: [] },
      { name: 'from.update()', url: '/reference/dart/storage-from-update', items: [] },
      { name: 'from.move()', url: '/reference/dart/storage-from-move', items: [] },
      { name: 'from.remove()', url: '/reference/dart/storage-from-remove', items: [] },
      {
        name: 'from.createSignedUrl()',
        url: '/reference/dart/storage-from-createsignedurl',
        items: [],
      },
      {
        name: 'from.createSignedUrls()',
        url: '/reference/dart/storage-from-createsignedurls',
        items: [],
      },
      {
        name: 'from.getPublicUrl()',
        url: '/reference/dart/storage-from-getpublicurl',
        items: [],
      },
    ],
  },
]

export default Nav
